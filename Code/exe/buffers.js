/**
Copyright 2023-2025, Brendan Andrew Rood
*/

/**
This file is part of the Rapid-Tree-Note / RTN program.

RTN is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.

RTN is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License along with RTN. It is available at ./License/COPYING. Otherwise, see <https://www.gnu.org/licenses/#AGPL>
*/

// MINIFIED VERSION OF THE FILE OF THE SAME NAME IN THE `src` FOLDER
// MINIFIED WITH https://www.toptal.com/developers/javascript-minifier
// MINIFIED AT Sun Apr 20 15:06:23 CDT 2025

import{ProcessingTree as e}from"./treeparser.js";class VirtualBuffer{constructor(e){this.ref=e,this.start=e.selectionStart,this.end=e.selectionEnd,this.state="UNLOCKED"}writeCarrat(){this.ref.selectionStart=this.start,this.ref.selectionEnd=this.end}readCarrat(){this.start=this.ref.selectionStart,this.end=this.ref.selectionEnd}moveCarrat(e){this.start+=e,this.end+=e,this.writeCarrat()}countCaretLeft(){var e=this.ref.value.substring(0,this.start).split("\n");return e[e.length-1].split("	").length-1}keyHandler(e,s){if(console.debug(e),void 0==e&&(e={key:"none"}),"LOCKED"==this.state){setTimeout(()=>{this.keyHandler(e,s)},10);return}if(this.readCarrat(),"Tab"==e.key){if(e.preventDefault(),this.start==this.end)c(this.ref.value,this.start)&&(this.ref.value=this.ref.value.substring(0,this.start)+"	"+this.ref.value.substring(this.end),this.moveCarrat(1));else{for(var t=this.start,r=this.end-1;"\n"!=this.ref.value.substring(t,t+1)&&t>0;)t--;for(;"\n"!=this.ref.value.substring(r,r+1)&&r>0;)r--;var a=[],l=t;for(a.push(t);l<r-1;)l++,"\n"==this.ref.value.substring(l,l+1)&&a.push(l);if(r!=t&&a.push(r),e.shiftKey){var n=0;for(var p of a)"	"==this.ref.value.substring(p+n+1,p+n+2)&&(this.ref.value=this.ref.value.substring(0,p+n+1)+""+this.ref.value.substring(p+n+2),n--,this.ref.selectionStart=p+n,this.ref.selectionEnd=p+n)}else{var n=0;for(var p of a)c(this.ref.value,p+n+1)&&(this.ref.value=this.ref.value.substring(0,p+n+1)+"	"+this.ref.value.substring(p+n+1),n++,this.ref.selectionStart=p+n,this.ref.selectionEnd=p+n)}}}if("Enter"==e.key&&(e.preventDefault(),function e(s,t){var r=s.substring(0,t).split("\n"),a=p(r[r.length-1])>0,l=s.split("\n")[r.length];null==l&&(l="PROCEED");var n=p(l)>0;return!0==a&&!0==n;function p(e){var s=e.match(/\S/gm);return null!=s?s.length:0}}(this.ref.value,this.start)&&this.start==this.end)){var o=this.countCaretLeft();this.ref.value=this.ref.value.substring(0,this.start)+"\n"+this.ref.value.substring(this.end),this.moveCarrat(1);for(var i=0;i<o;i++)this.ref.value=this.ref.value.substring(0,this.start)+"	"+this.ref.value.substring(this.end),this.moveCarrat(1);window.main.scrollToCaret(this.ref)}function c(e,s){var t=e.substring(0,s).split("\n").length,r=e.split("\n"),a=r[t-1],l="";r.length>1&&(l=r[t-2]);var n,p,o=c(a),i=c(l);if(a=(a=e.substring(0,s).split("\n"))[a.length-1],o<i+1&&(n=a,p=n.match(/([\S ]+)/g),!((p=null!=p?p[0].length:0)>0)))return!0;return!1;function c(e){if(""==e)return 0;var s=e.match(/^(\t*)/g);return null!=s?s[0].length:0}}this.state="LOCKED",setTimeout(()=>{s()},10)}update(){this.state="UNLOCKED",this.readCarrat()}}export class RawBuffer extends VirtualBuffer{constructor(e){super(e)}update(){this.ref.value=this.ref.value.replace(/[└├│─ ]*​/gm,"	"),this.ref.value=this.ref.value.replace(/(?:\t+[\S ]+)(\t+)/gm,"	"),super.update()}}export class ExeBuffer extends VirtualBuffer{constructor(s){super(s),this.tree=new e("")}update(){this.tree.input=this.ref.textContent,this.tree.totalParse();for(var e=this.tree.output,s=(e=(e=Formatter.escapeHTML(e)).replace(/(\[(.+?)\]\((.+?)\))|(https?:\/\/\S+)/g,function(e,s,t,r,a){return r?`<a style="z-index: 4; pointer-events: all; position: relative;" href="${r}" target="_blank" rel="noopener noreferrer"><b>[${t}](${r})</b></a>`:`<a style="z-index: 4; pointer-events: all; position: relative;" href="${a}" target="_blank" rel="noopener noreferrer"><b>${a}</b></a>`})).split("\n"),t=0;t<s.length;t++)window.dirnavIndex=t,s[t]=s[t].replace(/(DNL|RTN|DL)([\.\~]{0,1})((?:\/\.\.|\/\[[^\]]+\])+)(\/?)/g,function(e,s,t,r,a){var l=window.main.dirnav(null,s+t+r+a,window.dirnavIndex,!0)?"var(--RTN-SETTING_css-dnlValidColor)":"var(--RTN-SETTING_css-dnlInvalidColor)";let n=`<a style="z-index: 4; pointer-events: all; position: relative; color: ${l};" href="#" onclick="window.main.dirnav(event, '${s+t+r+a}', ${window.dirnavIndex});"><b>${s+t+r+a}</b></a>`;return n});var r="";for(var a of s)r+=a+"\n";e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=r=r.substring(0,r.length-1)).replace(/((?:\&lt\;)?)(-+|=+)((?:\&gt\;)?)/g,function(e,s,t,r){var a=s+t+r;return a.startsWith("&lt;")||a.split("").reverse().join("").startsWith(";tg&")?`<b>${a}</b>`:a})).replace(/(?<!\*|\\)(\*{1})([^\n*]+?)(\1)(?!\*|\\)/g,'<span style="color: var(--RTN-SETTING_css-glyphColor)"><b>$1</b></span><i>$2</i><span style="color: var(--RTN-SETTING_css-glyphColor)"><b>$3</b></span>')).replace(/^((?:[└├│─ ]*​)*)(-)( )/gm,'$1<span style="color: var(--RTN-SETTING_css-listElementColor)">•</span>$3')).replace(/^((?:[└├│─ ]*​)*)(\*)( )(?!.*\*)/gm,'$1<span style="color: var(--RTN-SETTING_css-listElementColor)">•</span>$3')).replace(/^((?:[└├│─ ]*​)*)([0-9]+\.)( )/gm,'$1<span style="color: var(--RTN-SETTING_css-listElementColor)"><b>$2</b></span>$3')).replace(/\[[\Y\/]\]/gm,`<span style="color: var(--RTN-SETTING_css-checklistYesColor); text-shadow: -1px -1px 5px black, -1px 0px 5px black, -1px 1px 5px black, 0px -1px 5px black, 0px 1px 5px black, 1px -1px 5px black, 1px 0px 5px black, 1px 1px 5px black;">[<span style="position: relative;"><span style="width: 1em; display: inline-block; position: absolute;">✓</span></span> ]</span>`)).replace(/\[[\N\X]\]/gm,`<span style="color: var(--RTN-SETTING_css-checklistNoColor); text-shadow: -1px -1px 5px black, -1px 0px 5px black, -1px 1px 5px black, 0px -1px 5px black, 0px 1px 5px black, 1px -1px 5px black, 1px 0px 5px black, 1px 1px 5px black;">[<span style="max-width: 1em; overflow: hidden;"><span style="width: 1em; display: inline-block; position: absolute;">✗</span></span> ]</span>`)).replace(/\[[\~\-]\]/gm,'<span style="color: var(--RTN-SETTING_css-checklistMaybeColor); text-shadow: -1px -1px 5px black, -1px 0px 5px black, -1px 1px 5px black, 0px -1px 5px black, 0px 1px 5px black, 1px -1px 5px black, 1px 0px 5px black, 1px 1px 5px black;">[<span style="max-width: 1em; overflow: hidden;"><span style="width: 1em; display: inline-block; position: absolute;">~</span></span> ]</span>')).replace(/(?<!\_|\\)(\_{2})([^\n_]+?)(\1)(?!\_|\\)/g,'<span style="color: var(--RTN-SETTING_css-glyphColor)"><b>$1</b></span><u>$2</u><span style="color: var(--RTN-SETTING_css-glyphColor)"><b>$3</b></span>')).replace(/(?<!\||\\)(\|{2})([^\n\|]+?)(\1)(?!\||\\)/g,'<span style="color: var(--RTN-SETTING_css-glyphColor)"><b>$1</b></span><a style="z-index: 4; pointer-events: all; position: relative;" href="#s" title="$2"><span style="font-size: 0vw;">$2</span></a><span style="color: var(--RTN-SETTING_css-glyphColor)"><b>$3</b></span>')).replace(/(?<!\*|\\)(\*{2})([^\n*]+?)(\1)(?!\*|\\)/g,'<span style="color: var(--RTN-SETTING_css-glyphColor)"><b>$1</b></span><b>$2</b><span style="color: var(--RTN-SETTING_css-glyphColor)"><b>$3</b></span>')).replace(/(?<!\*|\\)(\*{3})([^\n*]+?)(\1)(?!\*|\\)/g,'<span style="color: var(--RTN-SETTING_css-glyphColor)"><b>$1</b></span><i><b>$2</b></i><span style="color: var(--RTN-SETTING_css-glyphColor)"><b>$3</b></span>')).replace(/(?<!\~|\\)(\~{2})([^\n~]+?)(\1)(?!\~|\\)/g,'<span style="color: var(--RTN-SETTING_css-glyphColor)"><b>$1</b></span><del>$2</del><span style="color: var(--RTN-SETTING_css-glyphColor)"><b>$3</b></span>')).replace(/(?<!\\|\!)(\^)(.*?)(\^)(?<!\\|\!)/g,'<span style="color: var(--RTN-SETTING_css-glyphColor)"><b>$1</b></span><span style="display: inline-block; top: -0.2vw; position: relative; line-height: 0.000001em; margin-block: 0;">$2</span><span style="color: var(--RTN-SETTING_css-glyphColor)"><b>$3</b></span>')).replace(/(?<!\\)(\!\^)(.*?)(\!\^)(?<!\\)/g,'<span style="color: var(--RTN-SETTING_css-glyphColor)"><b>$1</b></span><span style="display: inline-block; top: 0.2vw; position: relative; line-height: 0.000001em; margin-block: 0;">$2</span><span style="color: var(--RTN-SETTING_css-glyphColor)"><b>$3</b></span>')).replace(/(?<!\`)(\`{1})([^\n`]+?)(\1)(?!\`)/g,'<span style="color: var(--RTN-SETTING_css-codeTextColor); background-color: var(--RTN-SETTING_css-codeBackgroundColor);"><b>$1</b>$2<b>$3</b></span>')).replace(/(RE)(\/)((?:[^\r\n\t\f\v ]|\\ )+)(\/)([gmixsuUAJD]*)/g,'<span style="background-color: var(--RTN-SETTING_css-regexBackgroundColor)"><span style="color: var(--RTN-SETTING_css-regexFlagColor)"><b>$1$2</b></span><span style="color: var(--RTN-SETTING_css-regexPatternColor)">$3</span><span style="color: var(--RTN-SETTING_css-regexFlagColor)"><b>$4$5</b></span></span>')).replace(/(\[hc)([0-9abcdef])([0-9abcdef])([0-9abcdef])(\])(.*?)(\1)(\2)(\3)(\4)(\5)/g,function(e,s,t,r,a,l,n,p,o,i,c,b){let h=parseInt(`${t}0`,16),x=parseInt(`${r}0`,16),u=parseInt(`${a}0`,16);return Math.max(h,x,u)>127?`<b>${s}${t}${r}${a}${l}</b><span style="color: #101010; background-color: #${t}0${r}0${a}0;"><b>${n}</b></span><b>${p}${o}${i}${c}${b}</b>`:`<b>${s}${t}${r}${a}${l}</b><span style="background-color: #${t}0${r}0${a}0;"><b>${n}</b></span><b>${p}${o}${i}${c}${b}</b>`})).replace(/(\[tc)([0-9abcdef])([0-9abcdef])([0-9abcdef])(\])(.*?)(\1)(\2)(\3)(\4)(\5)/g,function(e,s,t,r,a,l,n,p,o,i,c,b){return`<b>${s}${t}${r}${a}${l}</b><span style="color: #${t}0${r}0${a}0; text-shadow: -1px -1px 5px black, -1px 0px 5px black, -1px 1px 5px black, 0px -1px 5px black, 0px 1px 5px black, 1px -1px 5px black, 1px 0px 5px black, 1px 1px 5px black;"><b>${n}</b></span><b>${p}${o}${i}${c}${b}</b>`})).replace(/[└├│─ ]*​/gm,function(e){return`<span style="color: var(--RTN-SETTING_css-glyphColor);">${e}</span>`}),this.ref.innerHTML=e,super.update()}}