/**
Copyright 2023, Brendan Andrew Rood
*/

/**
This file is part of the Rapid-Tree-Note / RTN program.

RTN is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.

RTN is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License along with RTN. It is avalible at ./License/COPYING. Otherwise, see <https://www.gnu.org/licenses/>
*/

import{Line as t,Fork as e,Bend as r,Gap as s,Data as a,New as i,End as n,Null as l}from"./treeblocks.js";import{URIMannager as o}from"./URI-mannager.js";export default class h{constructor(t,e,r){this.maxURLLength=8192,this.uri=new o,window.main=this;var s=this.pullURL();this.raw=new RawBuffer(t),this.exe=new ExeBuffer(e),this.wrap=r,this.state="UNLOCKED",this.raw.ref.addEventListener("input",()=>this.keyPostRouter()),this.raw.ref.addEventListener("keydown",t=>this.keyPreRouter(t)),this.raw.ref.addEventListener("copy",t=>this.handleCopy(t)),this.raw.ref.addEventListener("keydown",t=>this.syncScrollbars(t)),this.raw.ref.addEventListener("paste",t=>this.handlePaste(t)),this.intervalUpdater=setInterval(()=>this.intervalUpdate(),1e3),this.focused=!0,document.addEventListener("visibilitychange",t=>this.focusToggle(t)),window.addEventListener("beforeunload",t=>this.safeShutdown(t)),this.setURL(s),this.keyPostRouter(),this.syncScrollbars(),this.handlePaste(),""!=s&&null!=s&&(document.title=this.exe.ref.textContent.split("\n")[0].substring(0,32))}debugDump(){console.log("=====STARTING=DEBUG=DUMP====="),console.log("Source Value:"),console.log(this.raw.ref.value.replaceAll("\n","\\n").replaceAll("	","\\t")),console.log("-----------------"),console.log("Display Value:"),console.log(this.exe.ref.innerHTML.replaceAll("\n","\\n").replaceAll("	","\\t")),console.log("=====END=DEBUG=DUMP=====")}safeShutdown(t){clearInterval(this.intervalUpdater),console.log("RTN Safe Shutdown Complete.")}focusToggle(t){this.focused=!this.focused,"hidden"===document.visibilityState?this.focused=!1:"visible"===document.visibilityState&&(this.focused=!0)}intervalUpdate(){this.focused&&this.keyPostRouter()}urlPreEncodeOnIdle(){let t=8192*Math.random()+0;this.shouldEncode=t,setTimeout(()=>this.urlPostEncodeOnIdle(t),1e3)}urlPostEncodeOnIdle(t){this.shouldEncode==t&&this.pushURL()}pullURL(){return this.uri.pull()}setURL(t){""!=t?this.raw.ref.value=t:this.raw.ref.value="Rapid Tree Notetaker\n	What is this?\n		The Rapid Tree Notetaker (RTN) is a notetaking tool developed by computer science student Brendan Rood at the University of Minnesota Duluth.\n		It aims to provide an easy way to take notes formatted similar to a Reddit thread, with indentation following a tree-like structure allowing for grouping.\n		It also prioritizes ease of sharing, as the URL can be shared to instantly communicate the note's contents.\n		It is free to use and will never ask you to log in.\n	Sample\n		Edit this text\n		to generate\n			a\n			document\n		formatted\n			like a tree!\n	Misc. Instructions\n		Indentation\n			Use TAB to indent\n			Supports block indentation editing\n		Limited Markdown Support\n			*You can wrap text with single asterisks to make it italic*\n			**You can wrap text with double asterisks to make it bold**\n			***You can wrap text in triple asterisks to make it both bold and italic***\n			~~You can wrap text with double tildes to strike it though~~"}pushURL(){var t=this.exe.ref.textContent.replace(/[\s]+$/,"");this.exe.tree.input=t,this.exe.tree.totalParse(),t=(t=(t=(t=(t=(t=this.exe.tree.output).replace(/├────── ​/gm,"├── ​")).replace(/└────── ​/gm,"└── ​")).replace(/│       ​/gm,"│   ​")).replace(/        ​/gm,"    ​")).replace(/<[^>]*>/g,""),console.log(t),this.uri.push(t),document.title=this.exe.ref.textContent.split("\n")[0].substring(0,32)}preLineWrap(){var t=this.exe.ref.innerHTML.split("\n"),e="";for(var r of t)/│ {3,7}​[^│├─└ ]/g.test(r)||/ {4,8}​[^│├─└ ]/g.test(r)?(console.log("wrapping glyphs found for ",r),e+="\n"+r.replace(/(?:│ +​|├─+ ​|└─+ ​| +​)+/g,"	")):e+="\n"+r;e=e.replace(/│ +​|├─+ ​|└─+ ​| +​/g,"	"),this.raw.ref.value=e}postLineWrap(){var t=this.exe.ref.innerHTML.replace(/&lt;.*?&gt;/g,"").replace(/\<.*?\>/g,"").split("\n").filter(t=>""!==t);console.log("lines",t);var e="";for(var r of t){var s=r.match(/^(?:│ +​|├─+ ​|└─+ ​| +​)+/gm);s?s=s[0]:(console.log("No leading glyphs found for line "+r),s="");var a=s;a=(a=a.replace(/├─+ ​$/gm,"│       ​")).replace(/└─+ ​$/gm,"        ​"),e+=this.findEffectiveBreakpoints(r).replaceAll("RTN_LINE-WRAP",a)+"\n"}this.exe.ref.innerHTML=e,this.raw.ref.value=e.replace(/│ +​|├─+ ​|└─+ ​| +​/g,"	").replace(/&lt;.*?&gt;/g,"")}keyPreRouter(t){this.raw.keyHandler(t,t=>this.keyPostRouter(t)),this.urlPreEncodeOnIdle()}keyPostRouter(){this.raw.update(),this.exe.ref.innerHTML=this.raw.ref.value.replace(/\</g,"&lt;").replace(/\>/g,"&gt;"),this.exe.update(),this.syncScrollbars()}findEffectiveBreakpoints(t){this.wrap.textContent="";var e=this.wrap.style.clientHeight,r=t.split(" ");for(var s of r){var a=this.wrap.textContent;this.wrap.textContent+=" "+s,this.wrap.style.clientHeight!=e&&(this.wrap.textContent=a,this.wrap.textContent+="RTN_LINE-WRAP",this.wrap.textContent+=" "+s,e=this.wrap.style.clientHeight)}return this.wrap.textContent}handlePaste(t){setTimeout(t=>this.syncScrollbars(t),100),setTimeout(()=>{this.raw.ref.value=this.raw.ref.value.replace(/├────── |│       |└────── |        /gm,"	"),this.raw.ref.value=this.raw.ref.value.replace(/├── |│   |└── |    /gm,"	")},100)}handleCopy(t){t.preventDefault(),this.keyPostRouter();var e=this.raw.ref.selectionStart,r=this.raw.ref.value.substring(0,e),s=u(r),a=this.raw.ref.selectionEnd,i=this.raw.ref.value.substring(e,a),n=u(i),l=this.raw.ref.selectionStart+8*s,o=this.raw.ref.selectionEnd+8*s+8*n,h=this.exe.ref.textContent.substring(l,o);function u(t){var e=t.match(/\t/gm);return null!=e?e.length:0}this.exe.tree.input=h,this.exe.tree.totalParse(),h=(h=(h=(h=(h=this.exe.tree.output).replace(/├────── ​/gm,"├── ​")).replace(/└────── ​/gm,"└── ​")).replace(/│       ​/gm,"│   ​")).replace(/        ​/gm,"    ​"),navigator.clipboard.writeText(h)}syncScrollbars(t){let e=document.getElementById("display"),r=document.getElementById("source"),s=document.getElementById("main"),a=`${e.offsetHeight+50}px`;s.style.height=a,r.style.height=`${e.offsetHeight}px`}};class LevelNode{constructor(t,e){this.level=t,this.value=e}}class ProcessingTree{constructor(t){this.input=t,this.nodes=[],this.blocks=[],this.output=""}toNodes(){var t=this.input.split("\n");for(var e of t){var r=a(e);e=s(e),this.nodes.push(new LevelNode(r,e))}function s(t){var e=t;return e.replaceAll(/\t/g,"")}function a(t){var e=t.match(/^\t*(\t)/gm);return null!=e?e[0].length:0}}toBlocks(){for(var t of this.nodes){for(var e=[],r=0;r<t.level;r++)e.push(new i);""==t.value?e.push(new n):e.push(new a(t.value)),this.blocks.push(e)}}parseNewBlocks(){for(var a=this.blocks,i=0;i<a.length;i++)for(var n=0;n<a[i].length;n++){var l="";if(""==l&&"Data"==f(i,n,a)&&(l="Data"),""==l){var o=null;if("Data"==f(i,n+1,a)&&(("Null"==f(i+1,n,a)||"Data"==f(i+1,n,a))&&(o=!0),null==o)){var h=c(i,n,a),u=p(i,n,a);function c(t,e,r){for(var s=0;t<r.length&&!(t+1>r.length-1);){var a=f(t+1,e,r);if("Data"==a||"Null"==a)break;s++,t++}return s}function p(t,e,r){for(var s=0;t<r.length&&!(t+1>r.length-1);){var a=f(t+1,e+1,r);if("Data"==a||"Null"==a)break;s++,t++}return s}o=h<=u}o&&(a[i][n]=new r,l="Fork")}""==l&&"Data"==f(i,n+1,a)&&(a[i][n]=new e,l="Fork"),""==l&&("Gap"==f(i-1,n,a)||"Bend"==f(i-1,n,a))&&(a[i][n]=new s,l="Gap"),""==l&&("Line"==f(i-1,n,a)||"Fork"==f(i-1,n,a))&&(a[i][n]=new t,l="Line")}function f(t,e,r){return t<0||e<0||r.length-1<t||r[t].length-1<e?"Null":r[t][e].type}this.blocks=a}toString(){for(var t="",e=this.blocks,r=0;r<e.length;r++){for(var s=0;s<e[r].length;s++)t+=e[r][s].data;t+="\n"}this.output=t}totalParse(){this.nodes=[],this.blocks=[],this.output="",this.toNodes(),this.toBlocks(),this.parseNewBlocks(),this.toString()}}class VirtualBuffer{constructor(t){this.ref=t,this.start=t.selectionStart,this.end=t.selectionEnd,this.state="UNLOCKED"}writeCarrat(){this.ref.selectionStart=this.start,this.ref.selectionEnd=this.end}readCarrat(){this.start=this.ref.selectionStart,this.end=this.ref.selectionEnd}moveCarrat(t){this.start+=t,this.end+=t,this.writeCarrat()}countCaretLeft(){var t=this.ref.value.substring(0,this.start).split("\n");return t[t.length-1].split("	").length-1}keyHandler(t,e){if(void 0==t&&(t={key:"none"}),"LOCKED"==this.state){setTimeout(()=>{this.keyHandler(t,e)},10);return}if(this.readCarrat(),"Tab"==t.key){if(t.preventDefault(),this.start==this.end)u(this.ref.value,this.start)&&(this.ref.value=this.ref.value.substring(0,this.start)+"	"+this.ref.value.substring(this.end),this.moveCarrat(1));else{for(var r=this.start,s=this.end-1;"\n"!=this.ref.value.substring(r,r+1)&&r>0;)r--;for(;"\n"!=this.ref.value.substring(s,s+1)&&s>0;)s--;var a=[],i=r;for(a.push(r);i<s-1;)i++,"\n"==this.ref.value.substring(i,i+1)&&a.push(i);s!=r&&a.push(s);var n=1;for(var l of a)u(this.ref.value,l+n)&&(t.shiftKey?"	"==this.ref.value.substring(l+n,l+n+1)&&(this.ref.value=this.ref.value.substring(0,l+n)+""+this.ref.value.substring(l+n+1),n++,this.ref.selectionStart=l+n,this.ref.selectionEnd=l+n):(this.ref.value=this.ref.value.substring(0,l+n)+"	"+this.ref.value.substring(l+n),n++,this.ref.selectionStart=l+n,this.ref.selectionEnd=l+n))}}if("Enter"==t.key&&(t.preventDefault(),function t(e,r){var s=e.substring(0,r).split("\n"),a=l(s[s.length-1])>0,i=e.split("\n")[s.length];null==i&&(i="PROCEED");var n=l(i)>0;return!0==a&&!0==n;function l(t){var e=t.match(/\S/gm);return null!=e?e.length:0}}(this.ref.value,this.start))){var o=this.countCaretLeft();this.ref.value=this.ref.value.substring(0,this.start)+"\n"+this.ref.value.substring(this.end),this.moveCarrat(1);for(var h=0;h<o;h++)this.ref.value=this.ref.value.substring(0,this.start)+"	"+this.ref.value.substring(this.end),this.moveCarrat(1)}function u(t,e){var r=(t=t.substring(0,e)).split("\n"),s=r[r.length-1],a="";r.length>1&&(a=r[r.length-2]);var i=t.substring(e-1,e),n=l(s)<=l(a);return("	"==i||"\n"==i)&&n;function l(t){var e=t.match(/^\t*(\t)/gm);return null!=e?e[0].length:0}}this.state="LOCKED",setTimeout(()=>{e()},10)}update(){this.state="UNLOCKED",this.readCarrat()}}class RawBuffer extends VirtualBuffer{constructor(t){super(t)}update(){this.ref.value=this.ref.value.replace(/[└├│─ ]*​/gm,"	"),this.ref.value=this.ref.value.replace(/(?:\t+[\S ]+)(\t+)/gm,"	"),super.update()}}class ExeBuffer extends VirtualBuffer{constructor(t){super(t),this.tree=new ProcessingTree("")}update(){this.tree.input=this.ref.textContent,this.tree.totalParse();var t=this.tree.output;t=(t=(t=(t=(t=(t=t.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&apos;")).replace(/(?<!\*)(\*{1})([^\n*]+?)(\1)(?!\*)/g,'<span style="color:cyan"><b>$1</b></span><i>$2</i><span style="color:cyan"><b>$3</b></span>')).replace(/(?<!\*)(\*{2})([^\n*]+?)(\1)(?!\*)/g,'<span style="color:cyan"><b>$1</b></span><b>$2</b><span style="color:cyan"><b>$3</b></span>')).replace(/(?<!\*)(\*{3})([^\n*]+?)(\1)(?!\*)/g,'<span style="color:cyan"><b>$1</b></span><i><b>$2</b></i><span style="color:cyan"><b>$3</b></span>')).replace(/(?<!\~)(\~{2})([^\n~]+?)(\1)(?!\~)/g,'<span style="color:cyan"><b>$1</b></span><del>$2</del><span style="color:cyan"><b>$3</b></span>')).replace(/[└├│─ ]*​/gm,function(t){return`<span style="color: cyan;">${t}</span>`}),this.ref.innerHTML=t,super.update()}}