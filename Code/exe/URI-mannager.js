/**
Copyright 2023, Brendan Andrew Rood
*/

/**
This file is part of the Rapid-Tree-Note / RTN program.

RTN is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.

RTN is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License along with RTN. It is avalible at ./License/COPYING. Otherwise, see <https://www.gnu.org/licenses/>
*/

export class URIMannager{constructor(){this.maxURILength=8192,this.defaultCompression="LZMA2",this.defaultEncoding="URI-B64"}pull(){var e=this.getURL(),r=e.data,n=e.compressor,t=e.encoding;r=this.decode(r,t),r=this.decompress(r,n);let o=new TextDecoder("utf-8");var r=o.decode(r);return r}push(e){var r=e.split("\n")[0];let n=new TextEncoder;var t=n.encode(e);return t=this.compress(t,this.defaultCompression),r=this.compress(r,"ZLIB"),t=this.encode(t,this.defaultEncoding),r=this.encode(r,"URI-B64"),this.setURL(t,r,this.defaultCompression,this.defaultEncoding),null}setURL(e,r,n,t){var o=window.location.href.split("?")[0],a=o+"?title="+r+"&enc="+t+"&cmpr="+n+"&data="+e;a.length+512>this.maxURILength&&(a=o+"?error=MAXIMUM-LINK-LENGTH-EXCEEDED"),history.replaceState({},"",a)}getURL(){var e=/(?:data=)([^\&\=\?]*)/gm.exec(window.location.href);e=null==e||""==e[1]?"":e[1];var r=/(?:cmpr=)([^\&\=\?]*)/gm.exec(window.location.href);r=null==r||""==r[1]?"ZLIB":r[1];var n=/(?:enc=)([^\&\=\?]*)/gm.exec(window.location.href);n=null==n||""==n[1]?"URI-B64":n[1];var t={};return t.encoding=n,t.compressor=r,t.data=e,t}encode(e,r){return"URI-B64"===r?function e(r){var n="";for(var t of r)n+=String.fromCodePoint(t);var o=btoa(n);return o.replace(/\+/g,"-").replace(/\//g,"_").replace(/\=/g,"")}(e):(console.warn("unrecognized encoding argument: "+r),null)}decode(e,r){return"URI-B64"===r?function e(r){var n=atob(r=r.replace(/\-/g,"+").replace(/\_/g,"/")),t=[];for(var o of n)t.push(o.charCodeAt(0));return new Uint8Array(t)}(e):(console.warn("unrecognized encoding argument: "+r),null)}decompress(e,r){switch(r){case"ZLIB":return function e(r){try{r=pako.inflate(r)}catch(n){r="There was a problem decoding the data in the link.\nAre you sure it was produced by this program?\nError has been printed to console.",console.error(n)}return r}(e);case"LZMA2":return function e(r){var n=[];for(var t of r)n.push(t-128);var r=LZMA.decompress(n),o=[];for(var t of r)o.push(t+128);return o=new Uint8Array(o),console.log(o),o}(e);default:return console.warn("unrecognized decompression argument: "+r),null}}compress(e,r){switch(r){case"ZLIB":var n;return n=e,n=pako.deflate(n,{level:9});case"LZMA2":return function e(r){var n=[];for(var t of r)n.push(t-128);r=LZMA.compress(n,9);var o=[];for(var t of r)o.push(t+128);return new Uint8Array(o)}(e);default:return console.warn("unrecognized compression argument: "+r),null}}}